// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        lht: lht {
            compatible = "zmk,behavior-hold-tap";
            label = "LHT";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "tap-preferred";
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
        };

        lkht: lkht {
            compatible = "zmk,behavior-hold-tap";
            label = "LKHT";
            bindings = <&lm>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
        };

        lsk: lsk {
            compatible = "zmk,behavior-hold-tap";
            label = "LSK";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        reset {
            bindings = <&to 0>;
            key-positions = <30 33>;
            layers = <1 3 2 4>;
        };

        setting {
            bindings = <&mo 4>;
            key-positions = <30 31 32 33>;
            layers = <0>;
        };
    };

    macros {
        lm: new_macro {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;

            label = "NEW_MACRO";
        };

        slm: slm {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&sk MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release>,
                <&sk MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;

            label = "SLM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R              &kp T          &kp Y            &kp U           &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F              &kp G          &kp H            &kp J           &kp K      &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V              &kp B          &kp N            &kp M           &kp COMMA  &kp DOT  &kp FSLH
                     &lsk 3 LEFT_SHIFT  &lt 1 SPACE    &lt 2 BACKSPACE  &lt 3 LEFT_GUI
            >;
        };

        control {
            bindings = <
&kp F1   &kp F2   &kp F3     &kp F4   &kp F5        &sk TAB           &kp TAB         &kp ESCAPE  &kp LEFT_ALT      &kp PAGE_UP
&kp F6   &kp F7   &kp F8     &kp F9   &kp F10       &kp LEFT          &kp DOWN        &kp UP      &kp RIGHT         &kp PAGE_DOWN
&kp F11  &kp F12  &kp SPACE  &sk DEL  &kp INSERT    &kp BACKSPACE     &kp RETURN      &kp SPACE   &kp LANG_HANGEUL  &kp PRINTSCREEN
                             &none    &none         &sk LEFT_CONTROL  &sk LEFT_SHIFT
            >;
        };

        symbol {
            bindings = <
&kp N1            &kp N2             &kp N3    &kp N4         &kp N5           &kp N6     &kp N7     &kp N8          &kp N9                &kp N0
&kp EXCLAMATION   &kp AT             &kp HASH  &kp DOLLAR     &kp PERCENT      &kp CARET  &kp AMPS   &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PLUS  &kp MINUS      &kp BACKSLASH    &kp PIPE   &kp EQUAL  &kp UNDERSCORE  &kp LEFT_BRACE        &kp RIGHT_BRACE
                                               &kp BACKSPACE  &kp BACKSPACE    &none      &none
            >;
        };

        wm {
            bindings = <
&kp LG(N1)   &kp LG(N2)  &kp LG(N3)  &kp LG(N4)        &kp LG(N5)        &kp LG(N6)  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LG(N0)
&kp LG(TAB)  &kp S       &kp LG(D)   &kp LG(F)         &kp G             &kp LG(H)   &kp LG(J)   &kp LG(K)   &kp LG(L)   &kp N0
&kp Z        &kp X       &kp LG(C)   &kp LG(V)         &kp B             &kp N       &kp LG(M)   &kp COMMA   &kp DOT     &kp FSLH
                                     &sk LEFT_CONTROL  &sk LEFT_SHIFT    &none       &none
            >;
        };

        setting {
            bindings = <
&sys_reset   &none  &none  &none       &bt BT_SEL 0    &none  &none  &none  &none  &sys_reset
&bootloader  &none  &none  &none       &bt BT_SEL 1    &none  &none  &none  &none  &bootloader
&none        &none  &none  &bt BT_CLR  &bt BT_SEL 2    &none  &none  &none  &none  &none
                           &none       &none           &none  &none
            >;
        };
    };
};
